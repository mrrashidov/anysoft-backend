<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Spatie\Translatable\HasTranslations;

class Article extends Model
{
    use HasFactory, HasTranslations;

    protected $casts = [
        'title' => 'json',
        'body' => 'json',
        'category_id' => 'integer',
        'author_id' => 'integer',
        'slug' => 'string',
        'images' => 'json',
        'in_homepage' => 'boolean',
        'in_top' => 'boolean',
        'created_at' => 'timestamp',
    ];

    protected $fillable = [
        'title',
        'body',
        'category_id',
        'image',
        'author_id',
        'slug',
        'type',
        'in_top',
        'in_homepage'
    ];

    protected array $translatable = ['title', 'body'];

    public function save(array $options = [])
    {
        $this->author_id = auth()->id();
        return parent::save($options); // TODO: Change the autogenerated stub
    }

    public function author(): BelongsTo
    {
        return $this->belongsTo(User::class, 'author_id', 'id');
    }

    public function category(): BelongsTo
    {
        return $this->belongsTo(ArticleCategory::class, 'category_id', 'id');
    }

}
